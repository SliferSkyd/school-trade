# Generated by Django 5.2 on 2025-05-12 05:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id_category', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupInfo',
            fields=[
                ('id_group', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_bank', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('score_group', models.IntegerField(blank=True, null=True)),
                ('avt_group', models.TextField(blank=True, null=True)),
                ('bank', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'group_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id_school', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email_school', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'school',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id_event', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('donated_amount', models.IntegerField(blank=True, null=True)),
                ('number_of_participants', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('num_of_report', models.IntegerField(blank=True, null=True)),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('poster', models.TextField(blank=True, null=True)),
                ('id_group', models.ForeignKey(blank=True, db_column='id_group', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.groupinfo')),
            ],
            options={
                'db_table': 'event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id_notification', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('noti_time', models.DateTimeField(blank=True, null=True)),
                ('status_read', models.CharField(blank=True, max_length=50, null=True)),
                ('id_event', models.ForeignKey(blank=True, db_column='id_event', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.event')),
                ('id_group', models.ForeignKey(blank=True, db_column='id_group', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.groupinfo')),
                ('old_id_notification', models.ForeignKey(blank=True, db_column='old_id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
            ],
            options={
                'db_table': 'notification',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='id_notification',
            field=models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id_post', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_image', models.TextField(blank=True, null=True)),
                ('product_used_period', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('num_of_report', models.IntegerField(blank=True, null=True)),
                ('type_post', models.CharField(blank=True, max_length=50, null=True)),
                ('complete_post', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('id_category', models.ForeignKey(blank=True, db_column='id_category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.category')),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
                ('id_old_post', models.ForeignKey(blank=True, db_column='id_old_post', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.post')),
            ],
            options={
                'db_table': 'post',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='id_post',
            field=models.ForeignKey(blank=True, db_column='id_post', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.post'),
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id_transaction', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('trans_content', models.TextField(blank=True, null=True)),
                ('tranfer_time', models.DateTimeField(blank=True, null=True)),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
            ],
            options={
                'db_table': 'transactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('social_score', models.IntegerField(blank=True, null=True)),
                ('created_score', models.IntegerField(blank=True, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('avt_user', models.TextField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('id_school', models.ForeignKey(blank=True, db_column='id_school', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.school')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TradingOffer',
            fields=[
                ('id_trading_offer', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('product_image', models.TextField(blank=True, null=True)),
                ('product_used_period', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('time_update_status', models.DateTimeField(blank=True, null=True)),
                ('id_category', models.ForeignKey(blank=True, db_column='id_category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.category')),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
                ('id_post', models.ForeignKey(blank=True, db_column='id_post', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.post')),
                ('id_user', models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users')),
            ],
            options={
                'db_table': 'trading_offer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id_report', models.AutoField(primary_key=True, serialize=False)),
                ('type_report', models.TextField(blank=True, null=True)),
                ('content_report', models.TextField(blank=True, null=True)),
                ('report_create_at', models.DateTimeField(blank=True, null=True)),
                ('status_solve', models.CharField(blank=True, max_length=255, null=True)),
                ('time_update_status_report', models.DateTimeField(blank=True, null=True)),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
                ('id_user', models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users')),
                ('verified_person', models.ForeignKey(blank=True, db_column='verified_person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='report_verified_person_set', to='my_app.users')),
            ],
            options={
                'db_table': 'report',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='post',
            name='id_user',
            field=models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users'),
        ),
        migrations.AddField(
            model_name='post',
            name='verified_person',
            field=models.ForeignKey(blank=True, db_column='verified_person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='post_verified_person_set', to='my_app.users'),
        ),
        migrations.CreateModel(
            name='ParticipateForm',
            fields=[
                ('id_participate_form', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('status_form', models.CharField(blank=True, max_length=50, null=True)),
                ('time_create_form', models.DateTimeField(blank=True, null=True)),
                ('time_update_status_form', models.DateTimeField(blank=True, null=True)),
                ('id_event', models.ForeignKey(blank=True, db_column='id_event', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.event')),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
                ('id_user', models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users')),
                ('member_verified', models.ForeignKey(blank=True, db_column='member_verified', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='participateform_member_verified_set', to='my_app.users')),
            ],
            options={
                'db_table': 'participate_form',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='id_user',
            field=models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users'),
        ),
        migrations.CreateModel(
            name='GroupUser',
            fields=[
                ('id_group_user', models.AutoField(primary_key=True, serialize=False)),
                ('role_in_group', models.CharField(blank=True, max_length=50, null=True)),
                ('id_group', models.ForeignKey(blank=True, db_column='id_group', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.groupinfo')),
                ('id_user', models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users')),
            ],
            options={
                'db_table': 'group_user',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='verified_person',
            field=models.ForeignKey(blank=True, db_column='verified_person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users'),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id_vote', models.AutoField(primary_key=True, serialize=False)),
                ('time_vote', models.DateTimeField(blank=True, null=True)),
                ('id_event', models.ForeignKey(blank=True, db_column='id_event', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.event')),
                ('id_notification', models.ForeignKey(blank=True, db_column='id_notification', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.notification')),
                ('id_post', models.ForeignKey(blank=True, db_column='id_post', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.post')),
                ('id_user', models.ForeignKey(blank=True, db_column='id_user', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='my_app.users')),
            ],
            options={
                'db_table': 'vote',
                'managed': True,
            },
        ),
    ]
